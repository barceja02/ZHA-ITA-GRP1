/*
 * File: app/controller/BookingController.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.2.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.2.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */
var openBkgType;
var createbkg;
var home;
Ext.define('layout.controller.BookingController', {
    extend: 'Ext.app.Controller',
    refs: [
        {
            ref: 'comgrp1bkgCreateBooking',
            selector: '#CreateBooking'
        },
        {
            ref: 'comgrp1bkgvpHome',
            selector: '#com.grp1.bkg.vpHome'
        }
    ],

    onHomeBtnViewBkgClick: function(button, e, eOpts) {
        openBkgType = "view";
        createbkg = Ext.create('layout.view.com.grp1.bkg.CreateBooking');
        createbkg.show();
        createbkg.setTitle("View");
    },

    onHomeBtnCreateBkgClick: function(button, e, eOpts) {
        openBkgType = "create";
        createbkg = Ext.create('layout.view.com.grp1.bkg.CreateBooking');
        createbkg.show();
    },

    onHomeBtnEditBkgClick: function(button, e, eOpts) {
        openBkgType = "edit";
        createbkg = Ext.create('layout.view.com.grp1.bkg.CreateBooking');
        createbkg.show();
        createbkg.setTitle("Edit");
    },

    onTxtCntrNumBlur: function(component, e, eOpts) {
        var cntrNum = Ext.getCmp('txtCntrNum').getValue();

        var pattern =  /^[A-Za-z]{4}[0-9]{6}?$/;

        if(cntrNum.match(pattern)){
        }
        else{
            Ext.Msg.alert("Validation Error", "Container Number should first have 4 letters and 6 digits");
        }
    },

    onBtnCreateBkgClick: function(button, e, eOpts) {
        var cntrNum = Ext.getCmp('txtCntrNum').getValue(),
            cntrType = Ext.getCmp('cntrTypeComboBox').getValue(),
            cgoNature = Ext.getCmp('cgoNatureRadioGrp').getValue(),
            cgoDesc = Ext.getCmp('txtCgoDesc').getValue(),
            grossWeight = Ext.getCmp('txtGrossWeight').getValue(),
            grossUnit = Ext.getCmp('gUnitComboBox').getValue(),
            netWeight = Ext.getCmp('txtNetWeight').getValue(),
            netUnit = Ext.getCmp('nUnitComboBox').getValue(),
            fromCity = Ext.getCmp('fromCityComboBox').getValue(),
            toCity = Ext.getCmp('toCityComboBox').getValue(),
            shipper = Ext.getCmp('txtShipper').getValue(),
            consignee = Ext.getCmp('txtConsignee').getValue(),
            isWtValid = Ext.getCmp('chkWtValid').getValue(),
        	isGoodCust = Ext.getCmp('chkGoodCust').getValue(),
        	isDocApproved = Ext.getCmp('chkDocsApproved').getValue();

        if(cntrNum !== null && cntrType !== null && cgoDesc !== null && fromCity !== null && toCity !== null && shipper !== null && consignee !== null){
        	if(isWtValid && isGoodCust && isDocApproved){
        		//save here
        	}
        	else{
                Ext.Msg.alert("Can't Create Booking", "Validation Should be all true");
        	}
        }

        else{
           // Show error
         Ext.Msg.alert("Can't Create Booking", "Please complete all fields");
        }


    },

    onCreateBookingBeforeShow: function(component, eOpts) {
        if(openBkgType === 'view'){
        	var txtCntrNum = Ext.getCmp('txtCntrNum');
        	var cntrTypeComboBox = Ext.getCmp('cntrTypeComboBox');
        	var cgoNatureRadioGrp = Ext.getCmp('cgoNatureRadioGrp');
        	var txtCgoDesc = Ext.getCmp('txtCgoDesc');
        	var txtGrossWeight = Ext.getCmp('txtGrossWeight');
        	var gUnitComboBox = Ext.getCmp('gUnitComboBox');
        	var txtNetWeight = Ext.getCmp('txtNetWeight');
        	var nUnitComboBox = Ext.getCmp('nUnitComboBox');
        	var fromCityComboBox = Ext.getCmp('fromCityComboBox');
        	var toCityComboBox = Ext.getCmp('toCityComboBox');
        	var txtShipper = Ext.getCmp('txtShipper');
        	var txtConsignee = Ext.getCmp('txtConsignee');
        	var btnCreateBkg = Ext.getCmp('btnCreateBkg');
        	var chkWtValid = Ext.getCmp('chkWtValid');
        	var chkGoodCust = Ext.getCmp('chkGoodCust');
        	var chkDocsApproved = Ext.getCmp('chkDocsApproved');
        	
        	txtCntrNum.disable();
        	cntrTypeComboBox.disable();
        	cgoNatureRadioGrp.disable();
        	txtCgoDesc.disable();
        	txtGrossWeight.disable();
        	gUnitComboBox.disable();
        	txtNetWeight.disable();
        	nUnitComboBox.disable();
        	fromCityComboBox.disable();
        	toCityComboBox.disable();
        	txtShipper.disable();
        	txtConsignee.disable();
        	btnCreateBkg.hide();
        	chkWtValid.disable();
        	chkGoodCust.disable();
        	chkDocsApproved.disable();

        }
        else if(openBkgType === 'edit'){
        	var txtCntrNum = Ext.getCmp('txtCntrNum');
        	var cntrTypeComboBox = Ext.getCmp('cntrTypeComboBox');
        	var cgoNatureRadioGrp = Ext.getCmp('cgoNatureRadioGrp');
        	var txtCgoDesc = Ext.getCmp('txtCgoDesc');
        	var txtGrossWeight = Ext.getCmp('txtGrossWeight');
        	var gUnitComboBox = Ext.getCmp('gUnitComboBox');
        	var txtNetWeight = Ext.getCmp('txtNetWeight');
        	var nUnitComboBox = Ext.getCmp('nUnitComboBox');
        	var fromCityComboBox = Ext.getCmp('fromCityComboBox');
        	var toCityComboBox = Ext.getCmp('toCityComboBox');
        	var txtShipper = Ext.getCmp('txtShipper');
        	var txtConsignee = Ext.getCmp('txtConsignee');
        	var btnCreateBkg = Ext.getCmp('btnCreateBkg');
        	var chkWtValid = Ext.getCmp('chkWtValid');
        	var chkGoodCust = Ext.getCmp('chkGoodCust');
        	var chkDocsApproved = Ext.getCmp('chkDocsApproved');
        	
        	txtCntrNum.setValue("OOLU123456");
        	cgoNatureRadioGrp.setValue("");
        	txtCgoDesc.setValue("Toys");
        	txtGrossWeight.setValue("20");
        	txtNetWeight.setValue("20");
        	txtShipper.setValue("OOCL");
        	txtConsignee.setValue("COSCO");
        	btnCreateBkg.setText('Update');
        }
    },

    onCreateBookingClose: function(panel, eOpts) {
        createbkg.destroy();
    },

    init: function(application) {
        this.control({
            "#homeBtnViewBkg": {
                click: this.onHomeBtnViewBkgClick
            },
            "#homeBtnCreateBkg": {
                click: this.onHomeBtnCreateBkgClick
            },
            "#homeBtnEditBkg": {
                click: this.onHomeBtnEditBkgClick
            },
            "#txtCntrNum": {
                blur: this.onTxtCntrNumBlur
            },
            "#btnCreateBkg": {
                click: this.onBtnCreateBkgClick
            },
            "#CreateBooking": {
                beforeshow: this.onCreateBookingBeforeShow,
                close: this.onCreateBookingClose
            }
        });
    }

});
